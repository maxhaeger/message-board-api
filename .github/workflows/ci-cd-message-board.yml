name: Terraform Workflow

on: [push, pull_request]

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  TF_VAR_linode_token: ${{ secrets.TF_VAR_linode_token }}
  LINODE_CLI_TOKEN: ${{ secrets.TF_VAR_linode_token }}

jobs:
  setup:
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Setup Terraform
        run: |
          cd terraform
          terraform init
          terraform apply -auto-approve

  deploy:
    needs: setup
    runs-on: ubuntu-latest
    container:
      image: alpine/k8s:1.25.16
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Deploy
        run: |
          apk update
          apk add py3-pip
          mkdir -p ~/.kube
          touch ~/.kube/config.lke
          chmod 600 ~/.kube/config.lke
          pip3 install linode-cli
          configid=$(linode-cli lke clusters-list --text --no-header | awk '{print $1}')
          config=$(linode-cli lke kubeconfig-view $configid --text --no-headers | base64 -d)
          echo "$config" > ~/.kube/config.lke
          export KUBECONFIG=~/.kube/config.lke
          pwd
          cd ./helm
          helm install backend ./backend
          helm install frontend ./frontend
          helm install environment ./environment
          kubectl get svc -l app.kubernetes.io/name=ingress-nginx -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'

  destroy:
    needs: deploy
    runs-on: ubuntu-latest
    container:
      image: hashicorp/terraform:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Destroy
        run: |
          cd terraform
          terraform init
          terraform destroy -auto-approve
          echo "Infrastructure destroyed!"