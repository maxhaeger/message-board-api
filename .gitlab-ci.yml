default:
  image:
    name: hashicorp/terraform:latest
    entrypoint:
      - /usr/bin/env
      - "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"

  cache:
    key: terraform
    paths:
      - .terraform

stages:
  - setup
  - deploy
  - post-deploy


setup:
  stage: setup
  script:
    - cd terraform
    - terraform init
    - terraform apply -auto-approve
  variables:
    AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
    AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
    TF_VAR_linode_token: $TF_VAR_linode_token

deploy:
  stage: deploy
  image: alpine/helm:3.6.3  # Verwenden Sie ein Docker-Image, das Helm und Bash enthält
  before_script:
    - apk add --no-cache bash  # Fügen Sie Bash zum Image hinzu
  script:
    - bash import-kubeconfig.sh
    - sleep 5
    - cd ../helm
    - helm install backend ./backend
    - helm install frontend ./frontend
    - helm install environment ./environment
  after_script:
    - sleep 60

post-deploy:
  stage: post-deploy
  script:
    - kubectl apply -f https://bit.ly/ingress_nginx_1_2_0
    - kubectl get svc -l app.kubernetes.io/name=ingress-nginx -o jsonpath='{.items[0].status.loadBalancer.ingress[0].ip}'